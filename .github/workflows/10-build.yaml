---

name: build

on:
  push:
    branches:
      - main
      - dev
      - 'v[0-9]?*'

  pull_request:
    branches:
      - '**'

  workflow_dispatch: {}

env:
  srcdir: src
  srcdoc: professional.md
  builddir: build
  prefix: richard_henning-professional_resume

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure build directory exists
        run: mkdir --verbose --parents "./${{ env.builddir }}"

      - name: Get additional git repository metadata
        id: get_repometa
        run: |
          ## fail on common errors
          set -o errexit -o nounset -o pipefail
          ## enable debug tracing - uncomment for debugging
          # set -o xtrace
          ## write metadata to GHA environment variables
          echo "short_sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "date=$(date --iso-8601=seconds --utc | tr -d ':-' )" >> $GITHUB_OUTPUT

      - name: Generate build metadata
        run: |
          ## fail on common errors
          set -o errexit -o nounset -o pipefail
          ## enable debug tracing - uncomment for debugging
          # set -o xtrace
          ## write metadata to a JSON file for inclusion in the release
          cat <<-__END__ > "${{ env.builddir }}/BUILDMETA.json"
          {
            "github": {
              "server_url": "${{ github.server_url }}",
              "repository": "${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "short_sha": "${{ steps.get_repometa.outputs.short_sha }}",
              "date": "${{ steps.get_repometa.outputs.date }}"
            }
          }
          __END__

      - name: Convert source to GitHub-Flavored Markdown
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --from gfm
            --to gfm
            --metadata version-meta="${{ steps.get_repometa.outputs.short_sha }}"
            --metadata date-meta="${{ steps.get_repometa.outputs.date }}"
            --output="./${{ env.builddir }}/${{ env.prefix }}.md"
            "./${{ env.srcdir }}/${{ env.srcdoc }}"

      - name: Convert source to PDF
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --template eisvogel
            --from gfm
            --metadata version-meta="${{ steps.get_repometa.outputs.short_sha }}"
            --metadata date-meta="${{ steps.get_repometa.outputs.date }}"
            --output="./${{ env.builddir }}/${{ env.prefix }}.pdf"
            "./${{ env.srcdir }}/${{ env.srcdoc }}"

      - name: Convert source to DOCX
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --from gfm
            --metadata version-meta="${{ steps.get_repometa.outputs.short_sha }}"
            --metadata date-meta="${{ steps.get_repometa.outputs.date }}"
            --output="./${{ env.builddir }}/${{ env.prefix }}.docx"
            "./${{ env.srcdir }}/${{ env.srcdoc }}"

      - name: Convert source to HTML
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --from gfm
            --metadata version-meta="${{ steps.get_repometa.outputs.short_sha }}"
            --metadata date-meta="${{ steps.get_repometa.outputs.date }}"
            --output="./${{ env.builddir }}/${{ env.prefix }}.html"
            "./${{ env.srcdir }}/${{ env.srcdoc }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.prefix }}-${{ steps.get_repometa.outputs.short_sha }}
          path: ${{ env.builddir }}/*
