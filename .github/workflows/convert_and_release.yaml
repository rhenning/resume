---

name: Convert and Release

on:
  push:
    branches:
      - main
      - dev
      - v*
  workflow_dispatch:

env:
  srcdir: src
  srcdoc: professional.md
  builddir: build
  prefix: richard_henning-professional_resume
  title: Professional ResumÃ© - Richard Henning

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure build directory exists
        run: mkdir --verbose --parents ./${{ env.builddir }}

      - name: Convert Markdown to PDF
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --listings
            --template eisvogel
            --output=${{ env.builddir }}/${{ env.prefix }}.pdf
            ${{ env.srcdir }}/${{ env.srcdoc }}

      - name: Convert Markdown to DOCX
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --listings
            --output=${{ env.builddir }}/${{ env.prefix }}.docx
            ${{ env.srcdir }}/${{ env.srcdoc }}

      - name: Convert Markdown to RTF
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --listings
            --output=${{ env.builddir }}/${{ env.prefix }}.rtf
            ${{ env.srcdir }}/${{ env.srcdoc }}

      - name: Convert Markdown to HTML
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --listings
            --output=${{ env.builddir }}/${{ env.prefix }}.html
            ${{ env.srcdir }}/${{ env.srcdoc }}

      - name: Convert Markdown to Markdown
        uses: docker://pandoc/extra:3
        with:
          args: >-
            --standalone
            --output=${{ env.builddir }}/${{ env.prefix }}.md
            ${{ env.srcdir }}/${{ env.srcdoc }}

      - name: Produce build metadata
        shell: bash
        run: |
          cat <<-__END__ > ${{ env.builddir }}/BUILDMETA.json
          { "github": {
              "server_url": "${{ github.server_url }}",
              "repository": "${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}"
            }
          }
          __END__

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: converted-files
          path: ${{ env.builddir }}/*

  release:
    needs: convert
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/main'

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: converted-files
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/${{ github.sha }}
          release_name: release/${{ github.sha }}
          draft: true
          prerelease: true

      - name: Upload Markdown assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ env.prefix }}.md
          asset_name: ${{ env.prefix }}.md
          asset_content_type: text/markdown

      - name: Upload PDF assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ env.prefix }}.pdf
          asset_name: ${{ env.prefix }}.pdf
          asset_content_type: application/pdf

      - name: Upload DOCX assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ env.prefix }}.docx
          asset_name: ${{ env.prefix }}.docx
          asset_content_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document

      - name: Upload RTF assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ env.prefix }}.rtf
          asset_name: ${{ env.prefix }}.rtf
          asset_content_type: application/rtf

      - name: Upload HTML assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ env.prefix }}.html
          asset_name: ${{ env.prefix }}.html
          asset_content_type: text/html

      - name: Upload build metadata
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/BUILDMETA.json
          asset_name: BUILDMETA.json
          asset_content_type: application/json
