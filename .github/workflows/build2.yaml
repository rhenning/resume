name: Convert Markdown to Formats and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Pandoc
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
        sudo apt-get install -y texlive-xetex  # For PDF conversion

    - name: Convert Markdown to PDF
      run: |
        pandoc input.md -o output.pdf

    - name: Convert Markdown to RTF
      run: |
        pandoc input.md -o output.rtf

    - name: Convert Markdown to DOC
      run: |
        pandoc input.md -o output.docx

    - name: Create Release
      id: create_release
      run: |
        TAG_NAME=$(echo ${GITHUB_REF} | sed 's/refs\/tags\///')
        RELEASE_RESPONSE=$(curl -XPOST https://api.github.com/repos/${GITHUB_REPOSITORY}/releases \
          -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
          -d '{
            "tag_name": "'$TAG_NAME'",
            "name": "Release '$TAG_NAME'",
            "body": "Markdown converted to PDF, RTF, and DOC formats.",
            "draft": false,
            "prerelease": false
          }')
        echo "::set-output name=release_url::$(echo $RELEASE_RESPONSE | jq -r .url)"
    
    - name: Upload release assets
      run: |
        release_url=${{ steps.create_release.outputs.release_url }}
        curl -XPOST $release_url/assets?name=output.pdf \
          -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @output.pdf
        curl -XPOST $release_url/assets?name=output.rtf \
          -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @output.rtf
        curl -XPOST $release_url/assets?name=output.docx \
          -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @output.docx
